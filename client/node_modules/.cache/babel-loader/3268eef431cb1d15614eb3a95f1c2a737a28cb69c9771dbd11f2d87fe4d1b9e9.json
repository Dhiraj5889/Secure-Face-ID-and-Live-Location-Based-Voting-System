{"ast":null,"code":"var _jsxFileName = \"D:\\\\secure voting system\\\\client\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Auth reducer\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN_START':\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case 'LOGIN_SUCCESS':\n      return {\n        ...state,\n        loading: false,\n        isAuthenticated: true,\n        user: action.payload.user,\n        userType: action.payload.userType,\n        token: action.payload.token,\n        error: null\n      };\n    case 'LOGIN_FAILURE':\n      return {\n        ...state,\n        loading: false,\n        isAuthenticated: false,\n        user: null,\n        userType: null,\n        token: null,\n        error: action.payload\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        isAuthenticated: false,\n        user: null,\n        userType: null,\n        token: null,\n        error: null\n      };\n    case 'UPDATE_USER':\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          ...action.payload\n        }\n      };\n    case 'CLEAR_ERROR':\n      return {\n        ...state,\n        error: null\n      };\n    default:\n      return state;\n  }\n};\n\n// Initial state\nconst initialState = {\n  isAuthenticated: false,\n  user: null,\n  userType: null,\n  token: localStorage.getItem('token'),\n  loading: false,\n  error: null\n};\n\n// Auth provider component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Set up axios interceptor for token\n  useEffect(() => {\n    if (state.token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${state.token}`;\n    } else {\n      delete axios.defaults.headers.common['Authorization'];\n    }\n  }, [state.token]);\n\n  // Check if user is authenticated on app load\n  useEffect(() => {\n    const checkAuth = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          const response = await axios.get('/api/auth/verify');\n          dispatch({\n            type: 'LOGIN_SUCCESS',\n            payload: {\n              user: response.data.user,\n              userType: response.data.userType,\n              token: token\n            }\n          });\n        } catch (error) {\n          localStorage.removeItem('token');\n          dispatch({\n            type: 'LOGOUT'\n          });\n        }\n      }\n    };\n    checkAuth();\n  }, []);\n\n  // Login function\n  const login = async (credentials, userType) => {\n    dispatch({\n      type: 'LOGIN_START'\n    });\n    try {\n      const response = await axios.post(`/api/auth/login/${userType}`, credentials);\n      const {\n        token,\n        voter,\n        admin\n      } = response.data;\n      const user = voter || admin;\n      localStorage.setItem('token', token);\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: {\n          user,\n          userType,\n          token\n        }\n      });\n      toast.success('Login successful!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed';\n      dispatch({\n        type: 'LOGIN_FAILURE',\n        payload: errorMessage\n      });\n      toast.error(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n\n  // Register function\n  const register = async (userData, userType) => {\n    dispatch({\n      type: 'LOGIN_START'\n    });\n    try {\n      const response = await axios.post(`/api/auth/register/${userType}`, userData);\n      toast.success('Registration successful! Please wait for verification.');\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const errorMessage = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed';\n      dispatch({\n        type: 'LOGIN_FAILURE',\n        payload: errorMessage\n      });\n      toast.error(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n\n  // Logout function\n  const logout = async () => {\n    try {\n      await axios.post('/api/auth/logout');\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      localStorage.removeItem('token');\n      dispatch({\n        type: 'LOGOUT'\n      });\n      toast.success('Logged out successfully');\n    }\n  };\n\n  // Update user data\n  const updateUser = userData => {\n    dispatch({\n      type: 'UPDATE_USER',\n      payload: userData\n    });\n  };\n\n  // Clear error\n  const clearError = () => {\n    dispatch({\n      type: 'CLEAR_ERROR'\n    });\n  };\n\n  // Refresh token\n  const refreshToken = async () => {\n    try {\n      const response = await axios.post('/api/auth/refresh');\n      const {\n        token\n      } = response.data;\n      localStorage.setItem('token', token);\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: {\n          user: state.user,\n          userType: state.userType,\n          token\n        }\n      });\n      return true;\n    } catch (error) {\n      logout();\n      return false;\n    }\n  };\n  const value = {\n    ...state,\n    login,\n    register,\n    logout,\n    updateUser,\n    clearError,\n    refreshToken\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use auth context\n_s(AuthProvider, \"GUSXxL/WUElrtHc/X73NyHNRMdw=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","axios","toast","jsxDEV","_jsxDEV","AuthContext","authReducer","state","action","type","loading","error","isAuthenticated","user","payload","userType","token","initialState","localStorage","getItem","AuthProvider","children","_s","dispatch","defaults","headers","common","checkAuth","response","get","data","removeItem","login","credentials","post","voter","admin","setItem","success","_error$response","_error$response$data","errorMessage","message","register","userData","_error$response2","_error$response2$data","logout","console","updateUser","clearError","refreshToken","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["D:/secure voting system/client/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst AuthContext = createContext();\r\n\r\n// Auth reducer\r\nconst authReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN_START':\r\n      return { ...state, loading: true, error: null };\r\n    case 'LOGIN_SUCCESS':\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isAuthenticated: true,\r\n        user: action.payload.user,\r\n        userType: action.payload.userType,\r\n        token: action.payload.token,\r\n        error: null\r\n      };\r\n    case 'LOGIN_FAILURE':\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isAuthenticated: false,\r\n        user: null,\r\n        userType: null,\r\n        token: null,\r\n        error: action.payload\r\n      };\r\n    case 'LOGOUT':\r\n      return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n        user: null,\r\n        userType: null,\r\n        token: null,\r\n        error: null\r\n      };\r\n    case 'UPDATE_USER':\r\n      return {\r\n        ...state,\r\n        user: { ...state.user, ...action.payload }\r\n      };\r\n    case 'CLEAR_ERROR':\r\n      return { ...state, error: null };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Initial state\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: null,\r\n  userType: null,\r\n  token: localStorage.getItem('token'),\r\n  loading: false,\r\n  error: null\r\n};\r\n\r\n// Auth provider component\r\nexport const AuthProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  // Set up axios interceptor for token\r\n  useEffect(() => {\r\n    if (state.token) {\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${state.token}`;\r\n    } else {\r\n      delete axios.defaults.headers.common['Authorization'];\r\n    }\r\n  }, [state.token]);\r\n\r\n  // Check if user is authenticated on app load\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      const token = localStorage.getItem('token');\r\n      if (token) {\r\n        try {\r\n          const response = await axios.get('/api/auth/verify');\r\n          dispatch({\r\n            type: 'LOGIN_SUCCESS',\r\n            payload: {\r\n              user: response.data.user,\r\n              userType: response.data.userType,\r\n              token: token\r\n            }\r\n          });\r\n        } catch (error) {\r\n          localStorage.removeItem('token');\r\n          dispatch({ type: 'LOGOUT' });\r\n        }\r\n      }\r\n    };\r\n\r\n    checkAuth();\r\n  }, []);\r\n\r\n  // Login function\r\n  const login = async (credentials, userType) => {\r\n    dispatch({ type: 'LOGIN_START' });\r\n    \r\n    try {\r\n      const response = await axios.post(`/api/auth/login/${userType}`, credentials);\r\n      \r\n      const { token, voter, admin } = response.data;\r\n      const user = voter || admin;\r\n      \r\n      localStorage.setItem('token', token);\r\n      \r\n      dispatch({\r\n        type: 'LOGIN_SUCCESS',\r\n        payload: {\r\n          user,\r\n          userType,\r\n          token\r\n        }\r\n      });\r\n\r\n      toast.success('Login successful!');\r\n      return { success: true };\r\n    } catch (error) {\r\n      const errorMessage = error.response?.data?.message || 'Login failed';\r\n      dispatch({\r\n        type: 'LOGIN_FAILURE',\r\n        payload: errorMessage\r\n      });\r\n      toast.error(errorMessage);\r\n      return { success: false, error: errorMessage };\r\n    }\r\n  };\r\n\r\n  // Register function\r\n  const register = async (userData, userType) => {\r\n    dispatch({ type: 'LOGIN_START' });\r\n    \r\n    try {\r\n      const response = await axios.post(`/api/auth/register/${userType}`, userData);\r\n      \r\n      toast.success('Registration successful! Please wait for verification.');\r\n      return { success: true, data: response.data };\r\n    } catch (error) {\r\n      const errorMessage = error.response?.data?.message || 'Registration failed';\r\n      dispatch({\r\n        type: 'LOGIN_FAILURE',\r\n        payload: errorMessage\r\n      });\r\n      toast.error(errorMessage);\r\n      return { success: false, error: errorMessage };\r\n    }\r\n  };\r\n\r\n  // Logout function\r\n  const logout = async () => {\r\n    try {\r\n      await axios.post('/api/auth/logout');\r\n    } catch (error) {\r\n      console.error('Logout error:', error);\r\n    } finally {\r\n      localStorage.removeItem('token');\r\n      dispatch({ type: 'LOGOUT' });\r\n      toast.success('Logged out successfully');\r\n    }\r\n  };\r\n\r\n  // Update user data\r\n  const updateUser = (userData) => {\r\n    dispatch({\r\n      type: 'UPDATE_USER',\r\n      payload: userData\r\n    });\r\n  };\r\n\r\n  // Clear error\r\n  const clearError = () => {\r\n    dispatch({ type: 'CLEAR_ERROR' });\r\n  };\r\n\r\n  // Refresh token\r\n  const refreshToken = async () => {\r\n    try {\r\n      const response = await axios.post('/api/auth/refresh');\r\n      const { token } = response.data;\r\n      \r\n      localStorage.setItem('token', token);\r\n      \r\n      dispatch({\r\n        type: 'LOGIN_SUCCESS',\r\n        payload: {\r\n          user: state.user,\r\n          userType: state.userType,\r\n          token\r\n        }\r\n      });\r\n      \r\n      return true;\r\n    } catch (error) {\r\n      logout();\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    ...state,\r\n    login,\r\n    register,\r\n    logout,\r\n    updateUser,\r\n    clearError,\r\n    refreshToken\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to use auth context\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport default AuthContext;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}