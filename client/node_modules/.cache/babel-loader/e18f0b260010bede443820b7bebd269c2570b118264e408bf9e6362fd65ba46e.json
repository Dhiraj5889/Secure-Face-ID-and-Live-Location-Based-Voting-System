{"ast":null,"code":"var _jsxFileName = \"D:\\\\secure voting system\\\\client\\\\src\\\\components\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  userType,\n  requiredPermissions = []\n}) => {\n  _s();\n  const {\n    isAuthenticated,\n    userType: currentUserType,\n    user\n  } = useAuth();\n  const location = useLocation();\n\n  // Check if user is authenticated\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      state: {\n        from: location\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Check if user type matches required type\n  if (userType && currentUserType !== userType) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Check if user has required permissions (for admin users)\n  if (requiredPermissions.length > 0 && currentUserType === 'admin') {\n    const hasPermission = requiredPermissions.every(permission => {\n      var _user$permissions;\n      return user === null || user === void 0 ? void 0 : (_user$permissions = user.permissions) === null || _user$permissions === void 0 ? void 0 : _user$permissions.includes(permission);\n    });\n    if (!hasPermission) {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/\",\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 14\n      }, this);\n    }\n  }\n\n  // Check if voter is verified\n  if (currentUserType === 'voter' && !(user !== null && user !== void 0 && user.isVerified)) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/verification-pending\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n  return children;\n};\n_s(ProtectedRoute, \"rrCmZ3/n113U7Mjau+jDCE+GW7Q=\", false, function () {\n  return [useAuth, useLocation];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","useLocation","useAuth","jsxDEV","_jsxDEV","ProtectedRoute","children","userType","requiredPermissions","_s","isAuthenticated","currentUserType","user","location","to","state","from","replace","fileName","_jsxFileName","lineNumber","columnNumber","length","hasPermission","every","permission","_user$permissions","permissions","includes","isVerified","_c","$RefreshReg$"],"sources":["D:/secure voting system/client/src/components/ProtectedRoute.js"],"sourcesContent":["import React from 'react';\r\nimport { Navigate, useLocation } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\nconst ProtectedRoute = ({ children, userType, requiredPermissions = [] }) => {\r\n  const { isAuthenticated, userType: currentUserType, user } = useAuth();\r\n  const location = useLocation();\r\n\r\n  // Check if user is authenticated\r\n  if (!isAuthenticated) {\r\n    return <Navigate to=\"/login\" state={{ from: location }} replace />;\r\n  }\r\n\r\n  // Check if user type matches required type\r\n  if (userType && currentUserType !== userType) {\r\n    return <Navigate to=\"/\" replace />;\r\n  }\r\n\r\n  // Check if user has required permissions (for admin users)\r\n  if (requiredPermissions.length > 0 && currentUserType === 'admin') {\r\n    const hasPermission = requiredPermissions.every(permission => \r\n      user?.permissions?.includes(permission)\r\n    );\r\n    \r\n    if (!hasPermission) {\r\n      return <Navigate to=\"/\" replace />;\r\n    }\r\n  }\r\n\r\n  // Check if voter is verified\r\n  if (currentUserType === 'voter' && !user?.isVerified) {\r\n    return <Navigate to=\"/verification-pending\" replace />;\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACxD,SAASC,OAAO,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,QAAQ;EAAEC,mBAAmB,GAAG;AAAG,CAAC,KAAK;EAAAC,EAAA;EAC3E,MAAM;IAAEC,eAAe;IAAEH,QAAQ,EAAEI,eAAe;IAAEC;EAAK,CAAC,GAAGV,OAAO,CAAC,CAAC;EACtE,MAAMW,QAAQ,GAAGZ,WAAW,CAAC,CAAC;;EAE9B;EACA,IAAI,CAACS,eAAe,EAAE;IACpB,oBAAON,OAAA,CAACJ,QAAQ;MAACc,EAAE,EAAC,QAAQ;MAACC,KAAK,EAAE;QAAEC,IAAI,EAAEH;MAAS,CAAE;MAACI,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpE;;EAEA;EACA,IAAId,QAAQ,IAAII,eAAe,KAAKJ,QAAQ,EAAE;IAC5C,oBAAOH,OAAA,CAACJ,QAAQ;MAACc,EAAE,EAAC,GAAG;MAACG,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpC;;EAEA;EACA,IAAIb,mBAAmB,CAACc,MAAM,GAAG,CAAC,IAAIX,eAAe,KAAK,OAAO,EAAE;IACjE,MAAMY,aAAa,GAAGf,mBAAmB,CAACgB,KAAK,CAACC,UAAU;MAAA,IAAAC,iBAAA;MAAA,OACxDd,IAAI,aAAJA,IAAI,wBAAAc,iBAAA,GAAJd,IAAI,CAAEe,WAAW,cAAAD,iBAAA,uBAAjBA,iBAAA,CAAmBE,QAAQ,CAACH,UAAU,CAAC;IAAA,CACzC,CAAC;IAED,IAAI,CAACF,aAAa,EAAE;MAClB,oBAAOnB,OAAA,CAACJ,QAAQ;QAACc,EAAE,EAAC,GAAG;QAACG,OAAO;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACpC;EACF;;EAEA;EACA,IAAIV,eAAe,KAAK,OAAO,IAAI,EAACC,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEiB,UAAU,GAAE;IACpD,oBAAOzB,OAAA,CAACJ,QAAQ;MAACc,EAAE,EAAC,uBAAuB;MAACG,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACxD;EAEA,OAAOf,QAAQ;AACjB,CAAC;AAACG,EAAA,CA/BIJ,cAAc;EAAA,QAC2CH,OAAO,EACnDD,WAAW;AAAA;AAAA6B,EAAA,GAFxBzB,cAAc;AAiCpB,eAAeA,cAAc;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}